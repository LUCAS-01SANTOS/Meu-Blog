[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre",
    "section": "",
    "text": "Experiência com Linguagens de Programação e Softwares\n\n    \n\n\n\nEducação\nUniversidade Federal da Paraíba Graduando em Administração | Previsão de Conclução - Junho 2024\n\n\nInteresses\nAnálise de Dados | Ciência de Dados | BI | Finanças e Investimento"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Analisando Estatísticas do Ibovespa com Python\n\n\n\n\n\n\n\npython\n\n\nfinanças\n\n\nbolsa de valores\n\n\n\n\n\n\n\n\n\n\n\nJan 29, 2023\n\n\nLucas Souza Santos\n\n\n\n\n\n\n  \n\n\n\n\nAnálise de Retornos Financeiros de Ações e Ibovespa com Python\n\n\n\n\n\n\n\npython\n\n\nfinanças\n\n\nbolsa de valores\n\n\n\n\n\n\n\n\n\n\n\nJan 25, 2023\n\n\nLucas Souza Santos\n\n\n\n\n\n\n  \n\n\n\n\nMeu Primeiro Blog Post\n\n\n\n\n\n\n\nNotícia\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2023\n\n\nLucas Souza Santos\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "",
    "text": "A análise de retornos financeiros é um dos principais meios de avaliar os resultados de investimentos em ações. Neste artigo, vamos aprender como calcular e analisar os retornos financeiros de ações e do índice Bovespa (IBOV) usando Python.\nNo post de hoje, vamos realizar uma análise exploratória da série de retornos diários do Ibovespa utilizando o Python."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Meu Primeiro Post Blog",
    "section": "",
    "text": "Este é o primeiro post desse blog. Bem-vindo!"
  },
  {
    "objectID": "posts/post-with-code/index.html#metodologia",
    "href": "posts/post-with-code/index.html#metodologia",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "1. Metodologia",
    "text": "1. Metodologia\nUm site popular que fornece preços diários de ações é o Yahoo! Finance. No entanto, se você usar os preços cotados neste site para calcular o retorno de uma ação, deverá ter o cuidado de usar as informações corretas. O Yahoo! Finance informa dois preços de fechamento de ações, o preço de fechamento real e o fechamento ajustado (Adj Close) que é ajustado para desdobramentos de ações e dividendos.\nEm um desdobramento de ações (os Splits), o número de ações aumenta e o preço das ações diminui. Por exemplo, em um desdobramento de ações 2 por 1, o número de ações seria dobrado, pois os acionistas receberiam 2 ações para cada 1 ação que possuem atualmente, e o preço das ações seria reduzido pela metade.\nSuponha que uma ação esteja sendo negociada atualmente a $ 120 por ação e passe por um desdobramento de 2 para 1. Suponha também que o preço das ações permaneça inalterado durante o dia. O preço de fechamento no Yahoo! O setor financeiro reportaria preços de $ 120 e $ 60, respectivamente, o que parece uma queda de 50% no preço das ações. Na verdade, o retorno do acionista durante o dia foi zero porque, embora o preço das ações tenha caído pela metade, o número de ações que possuíam dobrou. Nesse caso, o preço de fechamento ajustado seria de US$ 60 para os dois dias.\nO fechamento ajustado relatado no Yahoo! O setor financeiro também ajusta os dividendos. Considere uma ação que está sendo vendida por $ 100 no final de abril, paga um dividendo de $ 5 e tem um preço de $ 108 no final de maio. O retorno do acionista para esse período foi (US$ 108 - US$ 100 + 5) / US$ 100 = 13%. Nesse caso, o fechamento ajustado no final de maio seria de US$ 108, enquanto o fechamento ajustado do final de abril seria de US$ 95,581, o que representa um retorno de (US$ 108 - 95,581) / US$ 95,581 = 13%.\nÉ importante também frisar que os preços ajustados do Yahoo! não são exatos, pois o Yahoo! Finance relata o ajuste próximo ao centavo mais próximo. Esse arredondamento pode causar uma pequena diferença no cálculo do retorno. Considere o exemplo que usamos acima. Usando o preço ajustado de US$ 95,581, calcule você mesmo que o retorno é, na verdade, 12,99%, não 13%. Se você precisar de retornos totais, o fechamento ajustado fornecerá um cálculo de retorno bastante preciso e muito mais fácil, especialmente porque o Yahoo! finance não vai baixar preços e dividendos na mesma planilha. No entanto, se você precisar de retornos de ganhos de capital e rendimentos de dividendos separadamente, ou retornos muito precisos, precisará usar o preço de fechamento e os dividendos, não o fechamento ajustado."
  },
  {
    "objectID": "posts/post-with-code/index.html#preparando-o-ambiente",
    "href": "posts/post-with-code/index.html#preparando-o-ambiente",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "2. Preparando o ambiente",
    "text": "2. Preparando o ambiente\n\nTodo o código foi executado utilizando o Google Colab. (Gratuito e Online) Caso for executar localmente em sua máquina certifique-se de instalar todas as bibliotecas antes de importa-las.\n\nInstalação das bibliotecas necessárias:\n!pip install -q yfinance\n!pip install -q quantstats\nImportação das bibliotecas utilizadas:\nimport yfinance as yf\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport quantstats as qs"
  },
  {
    "objectID": "posts/post-with-code/index.html#retornos-mensais-do-índice-bovespa",
    "href": "posts/post-with-code/index.html#retornos-mensais-do-índice-bovespa",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "3. Retornos mensais do Índice Bovespa",
    "text": "3. Retornos mensais do Índice Bovespa\nPrimeiro, importamos os dados e criamos um DataFrame usando o Pandas. Em seguida, criamos um novo DataFrame com os retornos financeiros calculados.\nticker_ibov = ['^BVSP']\nperiodo_ibov = '10y'  # Opções: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max\nInicialmente criamos a variável ticker_ibov, onde salvaremos o ticker do índice Bovespa. E a variável periodo_ibov, onde salvamos o período ou intervalo de tempo para coleta dos dados.\nibov = yf.download(ticker_ibov, period=periodo_ibov, rounding=True )['Adj Close']\nretornos_ibov = ibov.resample('M').last().pct_change().dropna()\nqs.extend_pandas()\nretornos_ibov.plot_monthly_heatmap()\nEm seguida, salvamos na variável ibov o conjunto de dados de Preços Ajustados (Adj Close).\nCom a função resample() do Pandas, que é um método de conveniência para conversão de frequência e reamostragem de séries temporais. Agruparemos os dados mês a mês. Usamos o pct_change() para obtermos o aumento percentual e o dropna() para limparmos as linhas as quais não possuem preço de fechamento. O dataframe tratado é salvo na variável retornos-ibov.\nO cálculo: Para o retorno total utilizando o fechamento ajustado é bem simples, como segue,\n\nRetorno Total = (Preço Final-Preço Inicial)/Preço Inicial\nou\nRetorno Total = Preço Final/Preço Inicial-1\nE é exatamente esse calculo que é feito com a função pct_change(). Por fim, plotamos o nosso gráfico.\n\n\n\nMapa de calor dos retornos mensais do Ibovespa nos últimos 10 anos, desde 2013. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nPodemos identificar com o mapa acima que, o meses de março de 2016 e novembro de 2020 obtiveram os maiores retornos percentuais, já março de 2020 foi o mês com a maior baixa do índice, justificado pelo decreto da pandemia de Covid-19. O índice tem iniciado o mês de janeiro de 2023 no positivo, até o momento em que os dados foram coletados."
  },
  {
    "objectID": "posts/post-with-code/index.html#análise-dos-retornos-do-bando-do-brasil",
    "href": "posts/post-with-code/index.html#análise-dos-retornos-do-bando-do-brasil",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "4. Análise dos retornos do Bando do Brasil",
    "text": "4. Análise dos retornos do Bando do Brasil\n\nObtenção dos Dados\nAqui, repetimos o mesmo processo executado anteriormente com os dados do Ibovespa.\ntickers = ['BBAS3.SA',]\nperiodo = '10y'  # Opções: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max\nprices = yf.download(tickers, period=periodo, rounding=True )[['Adj Close', 'Volume']]\nprices\n\n\nPreços\nAo executarmos a variável prices, notaremos que ela contém o seguinte DataFrame, o que já nos permite ter uma primeira visualização dos nossos dados. Aqui além dos preços, também temos a coluna com o volume.\n\nPlotagem da série temporal de prices:\nprices['Adj Close'].plot(kind = 'line', title='Preços Ajustados', xlabel='Data', ylabel='Preços')\n\n\n\nGráfico dos preços ajustados da BBAS3, últimos 10 anos. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nPodemos observar que os preço das ações do Banco do Brasil (BBAS3) tiveram um movimento de alta expressiva ao longo de 2019, seguida de uma queda também expressiva no início de 2020.\n\n\nRetornos Anuais\nretornos_anuais = prices['Adj Close'].resample('Y').last().pct_change().dropna()\nretornos_anuais.index = retornos_anuais.index.year\nretornos_anuais.plot(kind = 'barh', title='Retornos Anuais', xlabel='Data')\n\n\n\nRetornos anuais BBAS3. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nOs anos em que houveram retornos negativos foram 2015, 2020, 2021. Sendo 2015 o ano com maior retorno negativo e 2016 o ano com maior retorno positivo.\nfig, (ax1, ax2) = plt.subplots(nrows=2, ncols=1, figsize=(14,18))\n\nprices['Adj Close'].plot(kind=\"line\", ax=ax1)\nax1.set_title(\"Preços Ajustados BBAS3\")\nax1.set_ylabel(\"Preço\")\nax1.set_xlabel(\"Ano\")\n\nretornos_anuais.plot(kind=\"line\", ax=ax2)\nax2.set_title(\"Retornos Anuais BBAS3\")\nax2.set_ylabel(\"Preço\")\nax2.set_xlabel(\"Ano\")\n\nplt.show()\n\n\n\nComparação entre preço e retorno. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\n\n\nEstatísticas dos retornos anuais\n# Importamos mais as seguintes bibliotecas.\nimport math\nimport statistics as st\nretornos_anuais.describe()\nO resultado da função describe() será a tabela abaixo:\n\n\n\nMétricas\nValores\n\n\n\n\nMédia\n0.164906\n\n\nDesvio Padrão\n0.390533\n\n\nMínimo\n-0.315050\n\n\n25%\n-0.138700\n\n\n50%\n0.169748\n\n\n75%\n0.269097\n\n\nMáximo\n0.994141\n\n\n\n# Cenários otimista e pessimista para o ativo\nmédia = st.mean(retornos_anuais)\ndesvio = st.pstdev(retornos_anuais)\notimista = média+2*desvio/math.sqrt(10)\npessimista = média-2*desvio/math.sqrt(10)\n\nprint(\"Otimista: \",otimista, \"Pessimista: \",pessimista)\nOtimista: 0.39922543479982053 (39,92%) Pessimista: -0.06941435742563054 (6,94%)\n\n\nRetornos Mensais\nretornos_mensais = prices['Adj Close'].resample('M').last().pct_change().dropna()\nqs.extend_pandas()\nretornos_mensais.plot_monthly_heatmap()\n\n\n\nMapa de calor dos retornos mensais do BBAS3 nos últimos 10 anos, desde 2013. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nretornos_mensais.plot.hist(bins=50, title='Histograma dos retornos mensais')\n\n\n\nHistograma dos retornos mensais do BBAS3. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nPodemos notar com o histograma que os retornos mais frequentes estão entre -10% e mais 10%.\nPor fim, temos a plotagem das médias móveis do Ibovespa e BBAS3."
  },
  {
    "objectID": "posts/post-with-code/index.html#conclusão",
    "href": "posts/post-with-code/index.html#conclusão",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "Conclusão",
    "text": "Conclusão\nNeste tutorial, aprendemos como calcular e analisar os retornos financeiros de ações e do índice Bovespa usando Python. Usamos o pacote Yfinance para baixar os dados, Pandas para calcular os retornos e o pacote Matplotlib para plotar e analisar os resultados. E que o retorno médio mensal do índice Ibovespa de 0,76% foi menor do que o retorno médio mensal do banco do Brasil (BBAS3) de 1,71%."
  },
  {
    "objectID": "posts/post-02/index.html",
    "href": "posts/post-02/index.html",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "",
    "text": "A análise de retornos financeiros é um dos principais meios de avaliar os resultados de investimentos em ações. Neste artigo, vamos aprender como calcular e analisar os retornos financeiros de ações e do índice Bovespa (IBOV) usando Python.\nNo post de hoje, vamos realizar uma análise exploratória da série de retornos diários do Ibovespa utilizando o Python."
  },
  {
    "objectID": "posts/post-02/index.html#metodologia",
    "href": "posts/post-02/index.html#metodologia",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "1. Metodologia",
    "text": "1. Metodologia\nUm site popular que fornece preços diários de ações é o Yahoo! Finance. No entanto, se você usar os preços cotados neste site para calcular o retorno de uma ação, deverá ter o cuidado de usar as informações corretas. O Yahoo! Finance informa dois preços de fechamento de ações, o preço de fechamento real e o fechamento ajustado (Adj Close) que é ajustado para desdobramentos de ações e dividendos.\nEm um desdobramento de ações (os Splits), o número de ações aumenta e o preço das ações diminui. Por exemplo, em um desdobramento de ações 2 por 1, o número de ações seria dobrado, pois os acionistas receberiam 2 ações para cada 1 ação que possuem atualmente, e o preço das ações seria reduzido pela metade.\nSuponha que uma ação esteja sendo negociada atualmente a $ 120 por ação e passe por um desdobramento de 2 para 1. Suponha também que o preço das ações permaneça inalterado durante o dia. O preço de fechamento no Yahoo! O setor financeiro reportaria preços de $ 120 e $ 60, respectivamente, o que parece uma queda de 50% no preço das ações. Na verdade, o retorno do acionista durante o dia foi zero porque, embora o preço das ações tenha caído pela metade, o número de ações que possuíam dobrou. Nesse caso, o preço de fechamento ajustado seria de US$ 60 para os dois dias.\nO fechamento ajustado relatado no Yahoo! O setor financeiro também ajusta os dividendos. Considere uma ação que está sendo vendida por $ 100 no final de abril, paga um dividendo de $ 5 e tem um preço de $ 108 no final de maio. O retorno do acionista para esse período foi (US$ 108 - US$ 100 + 5) / US$ 100 = 13%. Nesse caso, o fechamento ajustado no final de maio seria de US$ 108, enquanto o fechamento ajustado do final de abril seria de US$ 95,581, o que representa um retorno de (US$ 108 - 95,581) / US$ 95,581 = 13%.\nÉ importante também frisar que os preços ajustados do Yahoo! não são exatos, pois o Yahoo! Finance relata o ajuste próximo ao centavo mais próximo. Esse arredondamento pode causar uma pequena diferença no cálculo do retorno. Considere o exemplo que usamos acima. Usando o preço ajustado de US$ 95,581, calcule você mesmo que o retorno é, na verdade, 12,99%, não 13%. Se você precisar de retornos totais, o fechamento ajustado fornecerá um cálculo de retorno bastante preciso e muito mais fácil, especialmente porque o Yahoo! finance não vai baixar preços e dividendos na mesma planilha. No entanto, se você precisar de retornos de ganhos de capital e rendimentos de dividendos separadamente, ou retornos muito precisos, precisará usar o preço de fechamento e os dividendos, não o fechamento ajustado."
  },
  {
    "objectID": "posts/post-02/index.html#preparando-o-ambiente",
    "href": "posts/post-02/index.html#preparando-o-ambiente",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "2. Preparando o ambiente",
    "text": "2. Preparando o ambiente\n\nTodo o código foi executado utilizando o Google Colab. (Gratuito e Online) Caso for executar localmente em sua máquina certifique-se de instalar todas as bibliotecas antes de importa-las.\n\nInstalação das bibliotecas necessárias:\n!pip install -q yfinance\n!pip install -q quantstats\nImportação das bibliotecas utilizadas:\nimport yfinance as yf\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport quantstats as qs"
  },
  {
    "objectID": "posts/post-02/index.html#retornos-mensais-do-índice-bovespa",
    "href": "posts/post-02/index.html#retornos-mensais-do-índice-bovespa",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "3. Retornos mensais do Índice Bovespa",
    "text": "3. Retornos mensais do Índice Bovespa\nPrimeiro, importamos os dados e criamos um DataFrame usando o Pandas. Em seguida, criamos um novo DataFrame com os retornos financeiros calculados.\nticker_ibov = ['^BVSP']\nperiodo_ibov = '10y'  # Opções: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max\nInicialmente criamos a variável ticker_ibov, onde salvaremos o ticker do índice Bovespa. E a variável periodo_ibov, onde salvamos o período ou intervalo de tempo para coleta dos dados.\nibov = yf.download(ticker_ibov, period=periodo_ibov, rounding=True )['Adj Close']\nretornos_ibov = ibov.resample('M').last().pct_change().dropna()\nqs.extend_pandas()\nretornos_ibov.plot_monthly_heatmap()\nEm seguida, salvamos na variável ibov o conjunto de dados de Preços Ajustados (Adj Close).\nCom a função resample() do Pandas, que é um método de conveniência para conversão de frequência e reamostragem de séries temporais. Agruparemos os dados mês a mês. Usamos o pct_change() para obtermos o aumento percentual e o dropna() para limparmos as linhas as quais não possuem preço de fechamento. O dataframe tratado é salvo na variável retornos-ibov.\nO cálculo: Para o retorno total utilizando o fechamento ajustado é bem simples, como segue,\n\nRetorno Total = (Preço Final-Preço Inicial)/Preço Inicial\nou\nRetorno Total = Preço Final/Preço Inicial-1\nE é exatamente esse calculo que é feito com a função pct_change(). Por fim, plotamos o nosso gráfico.\n\n\n\nMapa de calor dos retornos mensais do Ibovespa nos últimos 10 anos, desde 2013. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nPodemos identificar com o mapa acima que, o meses de março de 2016 e novembro de 2020 obtiveram os maiores retornos percentuais, já março de 2020 foi o mês com a maior baixa do índice, justificado pelo decreto da pandemia de Covid-19. O índice tem iniciado o mês de janeiro de 2023 no positivo, até o momento em que os dados foram coletados."
  },
  {
    "objectID": "posts/post-02/index.html#análise-dos-retornos-do-bando-do-brasil",
    "href": "posts/post-02/index.html#análise-dos-retornos-do-bando-do-brasil",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "4. Análise dos retornos do Bando do Brasil",
    "text": "4. Análise dos retornos do Bando do Brasil\n\nObtenção dos Dados\nAqui, repetimos o mesmo processo executado anteriormente com os dados do Ibovespa.\ntickers = ['BBAS3.SA',]\nperiodo = '10y'  # Opções: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max\nprices = yf.download(tickers, period=periodo, rounding=True )[['Adj Close', 'Volume']]\nprices\n\n\nPreços\nAo executarmos a variável prices, notaremos que ela contém o seguinte DataFrame, o que já nos permite ter uma primeira visualização dos nossos dados. Aqui além dos preços, também temos a coluna com o volume.\n\nPlotagem da série temporal de prices:\nprices['Adj Close'].plot(kind = 'line', title='Preços Ajustados', xlabel='Data', ylabel='Preços')\n\n\n\nGráfico dos preços ajustados da BBAS3, últimos 10 anos. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nPodemos observar que os preço das ações do Banco do Brasil (BBAS3) tiveram um movimento de alta expressiva ao longo de 2019, seguida de uma queda também expressiva no início de 2020.\n\n\nRetornos Anuais\nretornos_anuais = prices['Adj Close'].resample('Y').last().pct_change().dropna()\nretornos_anuais.index = retornos_anuais.index.year\nretornos_anuais.plot(kind = 'barh', title='Retornos Anuais', xlabel='Data')\n\n\n\nRetornos anuais BBAS3. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nOs anos em que houveram retornos negativos foram 2015, 2020, 2021. Sendo 2015 o ano com maior retorno negativo e 2016 o ano com maior retorno positivo.\nfig, (ax1, ax2) = plt.subplots(nrows=2, ncols=1, figsize=(14,18))\n\nprices['Adj Close'].plot(kind=\"line\", ax=ax1)\nax1.set_title(\"Preços Ajustados BBAS3\")\nax1.set_ylabel(\"Preço\")\nax1.set_xlabel(\"Ano\")\n\nretornos_anuais.plot(kind=\"line\", ax=ax2)\nax2.set_title(\"Retornos Anuais BBAS3\")\nax2.set_ylabel(\"Preço\")\nax2.set_xlabel(\"Ano\")\n\nplt.show()\n\n\n\nComparação entre preço e retorno. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\n\n\nEstatísticas dos retornos anuais\n# Importamos mais as seguintes bibliotecas.\nimport math\nimport statistics as st\nretornos_anuais.describe()\nO resultado da função describe() será a tabela abaixo:\n\n\n\nMétricas\nValores\n\n\n\n\nMédia\n0.164906\n\n\nDesvio Padrão\n0.390533\n\n\nMínimo\n-0.315050\n\n\n25%\n-0.138700\n\n\n50%\n0.169748\n\n\n75%\n0.269097\n\n\nMáximo\n0.994141\n\n\n\n# Cenários otimista e pessimista para o ativo\nmédia = st.mean(retornos_anuais)\ndesvio = st.pstdev(retornos_anuais)\notimista = média+2*desvio/math.sqrt(10)\npessimista = média-2*desvio/math.sqrt(10)\n\nprint(\"Otimista: \",otimista, \"Pessimista: \",pessimista)\nOtimista: 0.39922543479982053 (39,92%) Pessimista: -0.06941435742563054 (6,94%)\n\n\nRetornos Mensais\nretornos_mensais = prices['Adj Close'].resample('M').last().pct_change().dropna()\nqs.extend_pandas()\nretornos_mensais.plot_monthly_heatmap()\n\n\n\nMapa de calor dos retornos mensais do BBAS3 nos últimos 10 anos, desde 2013. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nretornos_mensais.plot.hist(bins=50, title='Histograma dos retornos mensais')\n\n\n\nHistograma dos retornos mensais do BBAS3. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nPodemos notar com o histograma que os retornos mais frequentes estão entre -10% e mais 10%.\nPor fim, temos a plotagem das médias móveis do Ibovespa e BBAS3."
  },
  {
    "objectID": "posts/post-02/index.html#conclusão",
    "href": "posts/post-02/index.html#conclusão",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "Conclusão",
    "text": "Conclusão\nNeste tutorial, aprendemos como calcular e analisar os retornos financeiros de ações e do índice Bovespa usando Python. Usamos o pacote Yfinance para baixar os dados, Pandas para calcular os retornos e o pacote Matplotlib para plotar e analisar os resultados. E que o retorno médio mensal do índice Ibovespa de 0,76% foi menor do que o retorno médio mensal do banco do Brasil (BBAS3) de 1,71%."
  },
  {
    "objectID": "posts/post-01/index.html",
    "href": "posts/post-01/index.html",
    "title": "Meu Primeiro Blog Post",
    "section": "",
    "text": "Este é o primeiro post desse blog. Bem-vindo!😄\n\nO objetivo desse site pessoal/blog é servir como portfólio, para documentar para mim mesmo e compartilhar com todos o que tenho aprendido. Atualmente sou graduando em Administração pela UFPB, e pessoalmente gosto muito de programação, em Python principalmente.\nPor isso tenho buscado mesclar esses dois campus de conhecimento, aplicando a programação, mais especificamente a área de Data Science as minhas pesquisas e projetos na graduação. E sua aplicação ao mercado financeiro tem sido algo que tenho explorado mais.\nEntão fique a vontadade para aproveitar esse espaço, comentar ou entar em contato."
  },
  {
    "objectID": "posts/post-02/index.html#introdução",
    "href": "posts/post-02/index.html#introdução",
    "title": "Análise de Retornos Financeiros de Ações e Ibovespa com Python",
    "section": "Introdução",
    "text": "Introdução\nA análise de retornos financeiros é um dos principais meios de avaliar os resultados de investimentos em ações. Neste artigo, vamos aprender como calcular e analisar os retornos financeiros de ações e do índice Bovespa (IBOV) usando Python.\nNo post de hoje, vamos realizar uma análise exploratória da série de retornos diários do Ibovespa utilizando o Python."
  },
  {
    "objectID": "posts/post-03/index.html",
    "href": "posts/post-03/index.html",
    "title": "Analisando Estatísticas do Ibovespa com Python",
    "section": "",
    "text": "Neste post, vamos explorar como usar o Python para obter estatísticas sobre o Índice Bovespa (Ibovespa). Nós veremos como usar os dados históricos do Ibovespa para criar gráficos e calcular métricas como retorno.\nO objetivo é analisar o comportamento e a volatilidade do Ibovespa, observando seus retornos. Se os retornos diários para esse período se comportarem como uma distribuição normal ou gaussiana, estudos de riscos e probabilidades podem ser realizados adotando a hipótese da normalidade.\n\n\n\nA primeira etapa é obter os dados históricos do Ibovespa. Esses dados podem ser baixados do site da B3 | Bovespa, mas nesse caso vamos fazer o download do Yahoo! Finance, através da biblioteca python yfinance.\nComo sempre gosto de fazer, vou utilizar o Google Colab para fazer o código.\n# Instalção e importação do yfinance\n!pip install yfinance -q\nimport yfinance as yf\n# Para plotagem dos gráficos\nimport matplotlib.pyplot as plt\n\n# Para as estatísticas\nimport statistics as st\nimport numpy as np\nimport scipy.stats as sci\nfrom scipy.stats import norm\n\n\n\nOs dados de fechamento diário do Ibovespa foram adquiridos dos últimos 10 anos (29/01/2013 à 27/01/2023). A metodologia do calculo do retorno financeiro já está explicada no post anterior Análise de Retornos Financeiros de Ações e Ibovespa com Python.\nCom os dados em mãos executamos as funções do Pandas pct_change() para calcular os retornos e dropna() para eliminar as linhas com calores nulos, ou seja, dias em que não houve negociação na Bolsa. Os retornos são salvos na variável retornos_ibov.\nretornos_ibov = ibov.pct_change().dropna()\nretornos_ibov\nO DataFrame com os retornos apresenta um total de 2478 dias de negociação.\n\n\n\nExemplo da tabela com os retornos. Fonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\n\n\n\nAgora que temos os dados, podemos começar a explorá-los usando o Python. Vamos usar a biblioteca Pandas para ler os dados e a biblioteca Matplotlib para criar gráficos. Além das bibliotecas Numpy, Scipy.stats e Statistics, para as análises estatísticas e para que possamos plotar o histograma e o QQ-plot .\n\n\nGráfico de linhas com a série histórica dos preços de fechamento ajustado no índice Bovespa dos últimos 10 anos.\nplt.subplot()\nibov.plot(kind = 'line', \n          title='Ibovespa (dois anos)', \n          xlabel='Data', \n          ylabel='Ibovespa Diário', \n          color='black',\n          figsize=(12,6))\n\n\n\nFonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nAtravés desta série podemos ver a crescente alta no preço do Ibovespa entre 2016 e 2020, e sua grande baixa no início da pandemia em março de 2020. Seu atual preço hoje está na casa dos 1.800.\n\n\n\nplt.subplot()\nretornos_ibov.plot(kind = 'line', \n          title='Ibovespa - Retorno Diário (dois anos)', \n          xlabel='Data', \n          ylabel='Ibovespa Diário', \n          color='black',\n          figsize=(12,7))\n\n\n\nFonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nNeste gráfico, é possível perceber o volume de oscilação dos retornos diários do Ibovespa. Podemos ver alguns dias com retornos positivos ou negativos mais altos, como alguns dias em 2014, 2016, 2017 e 2020.\n\n\n\nplt.subplot()\nretornos_ibov.plot(kind = 'hist', \n                   bins=50, \n                   density=True, \n                   title='Ibovespa - Histograma dos Retornos (dois anos)', \n                   xlabel='Dias', \n                   ylabel='Frequência', \n                   color='blue', \n                   grid=True,\n                   figsize=(12,7))\n\nxmin, xmax = plt.xlim()\nmédia = st.mean(retornos_ibov)\ndesvio = st.pstdev(retornos_ibov)\neixo_x = np.linspace(xmin, xmax, 100)\neixo_y = norm.pdf(eixo_x, média, desvio)\nplt.plot(eixo_x, eixo_y, color='black')\n\n\n\nFonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nNeste gráfico, podemos ver que os retornos estão concentrados em torno de 0 entre -0.05 e 0.05, o que sugere que a distribuição dos retornos do Ibovespa segue uma distribuição de probabilidade normal, porém não perfeitamente. A curva preta representa a distribuição normal, com média e desvio padrão calculados através das funções da biblioteca statistics. Foram utilizadas 50 classes (bins=’50’) para a representação desse histograma.\nA comprovação de que a distribuição dos retornos do Ibovespa segue uma distribuição de probabilidade normal, porém não perfeitamente aparece no próximo gráfico, o QQ-plot.\n\n\n\nplt.subplot(title=('QQ-plot Ibovespa'), xlabel='Quantis teóricos', ylabel='Valores ordenados')\nsci.probplot(retornos_ibov, dist='norm', plot=plt)\nplt.show()\n\n\n\nFonte: Yahoo! Finance. Elaboração: Lucas Souza Santos.\n\n\nO QQ-plot mostra que apesar da maioria dos pontos seguirem a linha da distribuição normal, existem alguns pontos fora da linha, o que indica que os retornos não são perfeitamente normais. Assim alguns dias tiveram retornos próximos a -15% e alguns próximos a 15%.\nPortanto, podemos chamar essa distribuição de “cauda gorda”, poi as classes do histograma são mais longas do que a previsão teórica da curva normal, fazendo os marcadores do gráfico destoarem da linha de 45º nos extremos.\n\n\n\n\nNeste post, vimos como usar o Python para analisar estatísticas do Ibovespa. Nós aprendemos como obter os dados, como visualizá-los usando o Matplotlib e como calcular métricas como retorno e volatilidade.\n\n\n\nCAETANO, M. A. L. Python e Mercado Financeiro: programação para estudantes, investidores e analistas. São Paulo: Bluncher, 2011.\nmatplotlib.pyplot.hist — Documentação do Matplotlib 3.5.3\nPandas. DataFrame.plot — documentação do pandas 0.23.1 (pydata.org)"
  }
]